class Solution {
public:
    int fun(int i,int j,int k,vector<vector<char>>& board)
    {
        for(int m=0;m<board.size();m++)
        {
            if(board[m][j]==k+48)
            {
                return 0;
            }
        }
        for(int n=0;n<board[0].size();n++)
        {
            if(board[i][n]==k+48)
                return 0;
        }
        int left,right,top,bot;

       if(j>=0&&j<=2)
       {
           left=0;
           right=2;
       }
        if(j>=3&&j<=5)
        {
            left=3;
            right=5;
        }
        if(j>=6&&j<=8)
        {
            left=6;
            right=8;
        }
         if(i>=0&&i<=2)
       {
           top=0;
           bot=2;
       }
        if(i>=3&&i<=5)
        {
            top=3;
            bot=5;
        }
        if(i>=6&&i<=8)
        {
            top=6;
            bot=8;
        }

        for(int i=top;i<=bot;i++)
        {
            for(int j=left;j<=right;j++)
            {
                if(board[i][j]==k+48)
                    return 0;
            }
        }

        return 1;

    }

    bool solve(vector<vector<char>>& board)
    {
         for(int i=0;i<board.size();i++)
        {
            for(int j=0;j<board[0].size();j++)
            {
                if(board[i][j]=='.')
                {
                    for(int l=1;l<=9;l++)
                    {

                      if(fun(i,j,l,board))
                      {
                           board[i][j]=l+48;
                          if(solve(board))
                              return true;
                          else
                              board[i][j]='.';



                      }
                    }
                        return false;
                }
            }
        }
        return true;
    }





    void solveSudoku(vector<vector<char>>& board) {

       solve(board);


    }
};
